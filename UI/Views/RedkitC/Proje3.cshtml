@{
    Layout = "~/Views/LayoutPage.cshtml";
}
<div class="bgimg" style="background-image: url('../assets/images/bg_03.jpg');" data-stellar-background-ratio="0.5">
    <div class="container">
        <div class="row align-items-center justify-content-center text-center">
            <div class="col-md-7">
                <h2 class="">red-kit ile Arduino Programlamaya Giriş #15</h2>
                <p class="lead mx-auto desc mb-5">Bu derste Akıllı Yayaya Geçidi yapacağız.</p>
            </div>
        </div>
    </div>
</div>
<div class="site-section">
    <div class="container">
        <div class="mb-5">
            <h1>Ders #15: Akıllı Yaya Geçidi</h1>
            <p>
                <li>
                    Yaya geçidinde geçerken sıkıntı yaşadığınız oluyor mu? Açıklayınız.
                </li>
                <li>
                    Yollar herkes için güvenli mi? Yayalar ne gibi sıkıntılar yaşıyor?
                </li>
                <li> Küçük çocuklar karşıdan karşıya geçerken güvenliği nasıl sağlayabiliriz?</li>


            </p>
        </div>
        <div class="mb-5">

        </div>
        <div class="mb-5">
            <h2>Proje Algoritması</h2>
            <ul class="ul-check list-unstyled success">
                <li>  Yaya geçidinde bulunan mesafe sensörü birini algıladığında trafik ışığı görevindeki ledlerimiz devreye girecek. Derhal kırmızı yanarak trafiği durduracak.</li>
                <li>  Trafikteki şoförü bilgilendirmek için ekranı kullanacağız. </li>
                <li>  Kırmızı ışık yanarken 60 saniye bekleyeceğiz. 60’dan geriye doğru sayarak bunu ekrana yazdıracağız. Bu sırada her saniyede bir bip sesi duyuracağız </li>
                <li> Kırmızı ışığın süresi bittiği zaman kısa bir süre sarı yanıp tekrar yeşile döneceğiz. </li>

            </ul>
        </div>
        <div class="mb-5">
            <h2>Proje Devresi</h2>
            <p>Erkek-erkek uçlu bir jumper kablonun bir ucunu red-kit üzerindeki led pinlerinden yakmak istediğimiz sıradaki lede, diğer ucunu arduino üzerindeki dijital pinlerden kontrol etmek istediğimiz pine takıyoruz.</p>

            <div class="row container">
                <div class="col-md-8">
                    <img src="../assets/images/schematic_diagrams/akilliyaya.PNG" style="width: 100%; height: auto;">
                </div>
                <div class="col-md-4" style="padding-top: 5%;">
                    <ul class="ul-check list-unstyled success">
                        <li>
                            Mesafe Sensörü Bağlantıları
                            <ul class="ul-check list-unstyled success">
                                <li> Echo🡺 3</li>
                                <li>Trig 🡺 2</li>
                                <li> Buzzer 🡺12 </li>
                                <li> Led3🡺9 </li>
                                <li>Led2 🡺 11</li>
                                <li>Led1 🡺 10</li>

                            </ul>
                        </li>
                    </ul>

                    <ul class="ul-check list-unstyled success">
                        <li>
                            LCD5110 Bağlantıları
                            <ul class="ul-check list-unstyled success">

                                <li> Echo🡺 3</li>
                                <li>Trig 🡺 2</li>
                                <li> Buzzer 🡺12 </li>
                                <li> Led3🡺9 </li>
                                <li>Led2 🡺 11</li>
                                <li>Led1 🡺 10</li>
                            </ul>
                        </li>
                    </ul>


                </div>




            </div>
            <div class="mb-5">
                <h2>Projenin Programlanması</h2>
                <p>
                    Deneyimizin devresini tamamladığımıza göre artık programlamaya geçebiliriz. Kullanacağımız kütüphaneleri çağırıyoruz ve kullanacağımız pinleri tanımlıyoruz.
                    Ekranımızı tanımlayıp, değişkenlerimizi tanımlıyoruz. Setup kısmında giriş çıkışlarımızı tanımlıyoruz.

                <p>
                    Uzaklik değişkenimizi UzaklikHesapla fonksiyonumuz yardımıyla değiştiriyoruz. Eğer uzaklik değerimiz 20’nin altında ise birazdan tanımlayacağımız Dur ve Bekleme fonksiyonlarımızı çalıştırıyoruz.
                </p>
                <p>
                    Ve şimdi,Fonksiyonlarımızı yazmaya başlıyoruz. İlk olarak mesafe ölçme fonksiyonumuzu yazıyoruz.Bu fonksiyon bize ölçtüğü uzaklık değerini döndürecek.
                </p>
                <p>
                    void Dur() { } Dur fonksiyonu ile trafik ışığımızı yeşilden kırmızıya döndürüyoruz. Trafikteki şoförlere lütfen bekleyiniz mesajını ekran yardımı ile aktarıyoruz.
                </p>
                <p>
                    void Bekleme() { } Bekleme fonksiyonu ile bekleme geri sayımını yapıyoruz. Bu fonksiyon ile geri sayım yaparken buzzerdan bip sesi çıkarıyoruz. Ayrıca geri sayımı yaparken şoföre ne kadar beklemesi gerektiğini ekrana yazdırıyoruz.
                </p>
                <p>
                    void SerbestGecis() { } Herhangi bir aksi durum yokken trafiğin devam etmesi için yeşil ışığımızı yakıyoruz. Bu sırada şoförlere iyi yolculuklar diliyoruz.
                </p>

                <iframe src=https://create.arduino.cc/editor/red-kit/2cfb0a2f-3910-48d3-819d-e4ef30425b3c/preview style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
                <p style="color:green">Yukarıdaki kod pencerisinin sağ üst köşesindeki aşağı doğru ok simgesine tıklayan proje dosyasını bilgisayarınıza indirebilirsiniz. </p>
            </div>
        </div>
    </div>
    @{
        Html.RenderPartial("redkitC");
    }
